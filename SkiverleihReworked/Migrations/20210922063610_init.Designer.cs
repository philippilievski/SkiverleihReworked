// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkiverleihReworked;

namespace SkiverleihReworked.Migrations
{
    [DbContext(typeof(Skiverleihcontext))]
    [Migration("20210922063610_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkiverleihReworked.Model.Adress", b =>
                {
                    b.Property<int>("AdressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Housenumber")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("AdressID");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdressID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.HasIndex("AdressID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.CustomerItem", b =>
                {
                    b.Property<int>("CustomerItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerItemID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ItemID");

                    b.ToTable("CustomerItems");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("StatusID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Customer", b =>
                {
                    b.HasOne("SkiverleihReworked.Model.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressID");

                    b.Navigation("Adress");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.CustomerItem", b =>
                {
                    b.HasOne("SkiverleihReworked.Model.Customer", "Customer")
                        .WithMany("CustomerItems")
                        .HasForeignKey("CustomerID");

                    b.HasOne("SkiverleihReworked.Model.Item", "Item")
                        .WithMany("CustomerItems")
                        .HasForeignKey("ItemID");

                    b.Navigation("Customer");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Item", b =>
                {
                    b.HasOne("SkiverleihReworked.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("SkiverleihReworked.Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Category");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Customer", b =>
                {
                    b.Navigation("CustomerItems");
                });

            modelBuilder.Entity("SkiverleihReworked.Model.Item", b =>
                {
                    b.Navigation("CustomerItems");
                });
#pragma warning restore 612, 618
        }
    }
}
